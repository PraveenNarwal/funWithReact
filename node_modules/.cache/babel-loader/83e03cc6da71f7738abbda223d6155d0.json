{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\demo-project\\\\src\\\\Second.jsx\";\nimport React from 'react';\n\nfunction Second() {\n  const [filter, setFilter] = React.useState(\"\");\n  const [userCollection, setUserCollection] = React.useState([]); // Load full list when the component gets mounted and filter gets updated\n\n  React.useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/users?name_like=${filter}`).then(response => response.json()).then(json => setUserCollection(json));\n  }, [filter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: filter,\n    onChange: e => setFilter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, userCollection.map((user, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, user.name))));\n}\n\n; // // You need to extract the functionality of this \n// component into a function namely \"useUserCollection\" that will return 4 things :\n// // {userCollection, loadUsers, filter, setFilter}\n// // And call that function from the functional component. \n// Also, make sure the custom function call will be made only when the filter variable changes.\n// // The functionality of the Component => \n// It will load the list of user from the API: \"https://jsonplaceholder.typicode.com/users\". \n//And it will show an editable field that will filter out the username based on the character entered in the field.\n\nexport default Second;","map":{"version":3,"sources":["D:/react/demo-project/src/Second.jsx"],"names":["React","Second","filter","setFilter","useState","userCollection","setUserCollection","useEffect","fetch","then","response","json","e","target","value","map","user","index","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,KAAK,CAACI,QAAN,CAAe,EAAf,CAA5C,CAFc,CAKd;;AACAJ,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAE,wDAAuDN,MAAO,EAAhE,CAAL,CACKO,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAIL,iBAAiB,CAACK,IAAD,CAFnC;AAGH,GAJD,EAIG,CAACT,MAAD,CAJH;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEA,MAAd;AAAsB,IAAA,QAAQ,EAAEU,CAAC,IAAIT,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,cAAc,CAACU,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,kBAChB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,IAAI,CAACE,IAAtB,CADH,CADL,CAFJ,CADJ;AAUH;;AAAA,C,CAOD;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;;AAOA,eAAejB,MAAf","sourcesContent":["import React from 'react'\r\n\r\nfunction Second() {\r\n    const [filter, setFilter] = React.useState(\"\");\r\n    const [userCollection, setUserCollection] = React.useState([]);\r\n\r\n\r\n    // Load full list when the component gets mounted and filter gets updated\r\n    React.useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/users?name_like=${filter}`)\r\n            .then(response => response.json())\r\n            .then(json => setUserCollection(json));\r\n    }, [filter]);\r\n\r\n    return (\r\n        <div>\r\n            <input value={filter} onChange={e => setFilter(e.target.value)} />\r\n            <ul>\r\n                {userCollection.map((user, index) => (\r\n                    <li key={index}>{user.name}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // You need to extract the functionality of this \r\n// component into a function namely \"useUserCollection\" that will return 4 things :\r\n\r\n// // {userCollection, loadUsers, filter, setFilter}\r\n\r\n\r\n\r\n// // And call that function from the functional component. \r\n// Also, make sure the custom function call will be made only when the filter variable changes.\r\n\r\n// // The functionality of the Component => \r\n// It will load the list of user from the API: \"https://jsonplaceholder.typicode.com/users\". \r\n//And it will show an editable field that will filter out the username based on the character entered in the field.\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Second\r\n"]},"metadata":{},"sourceType":"module"}